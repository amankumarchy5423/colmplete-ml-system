# Workflow Name
name: "infra-gitops"

# Workflow Triggers
on:
  push:
    branches:
      - iac-gitops
    paths:  
      - terraform/**
  workflow_dispatch: # Enables manual trigger for the workflow

# Environment Variables
env:
  # AWS Credentials
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 Bucket for Terraform State
  S3_BUCKET: ${{ secrets.BUCKET }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  EKS_CLUSTER: ${{ vars.EKS_CLUSTER }}

# Define Jobs
jobs:
  terraform:
    name: "Deploy Infra with Terraform on AWS"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$S3_BUCKET"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Kubernetes config
        id: getconfig
        if: steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }} 

      - name: Install Ingress controller
        if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.12.0-beta.0/deploy/static/provider/aws/deploy.yaml

  destroy:
    name: "Destroy Infra on AWS"
    runs-on: ubuntu-latest

    # Add manual trigger
    if: github.event_name == 'workflow_dispatch'

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$S3_BUCKET"

      - name: Terraform destroy
        id: destroy
        run: terraform destroy -auto-approve -input=false